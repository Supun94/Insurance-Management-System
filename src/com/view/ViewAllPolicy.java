/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.view;

import com.controller.PolicyController;
import com.model.Policy;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author supun
 */
public class ViewAllPolicy extends javax.swing.JInternalFrame {
private static JTextField clientComboText;
    private static String[] clientComboList;
    static String updateClient;
    JTabbedPane jTabbedPane;
    /**
     * Creates new form ViewAllPolicy
     */
    public ViewAllPolicy() {
        initComponents();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        viewTabbedPane = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clientTable = new javax.swing.JTable();
        updateButton = new javax.swing.JButton();
        ClientComboBox = new javax.swing.JComboBox();
        searchButton = new javax.swing.JButton();
        deleteButton = new javax.swing.JButton();
        printButton = new javax.swing.JButton();
        refereshButton = new javax.swing.JButton();
        nameLabel = new javax.swing.JLabel();
        viewAllButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        medicalRadioButton = new javax.swing.JRadioButton();
        amountTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        lifeRadioButton = new javax.swing.JRadioButton();
        policyIdTextField = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        vehicleRadioButton = new javax.swing.JRadioButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        nic1TextField = new javax.swing.JTextField();
        dateTextField = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setBackground(java.awt.Color.white);
        jLabel1.setFont(new java.awt.Font("Droid Serif", 0, 36)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Manage Policy Form");

        clientTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "NIC", "PolicyID", "PolicyType", "Amount", "StartDate"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(clientTable);

        updateButton.setBackground(new java.awt.Color(153, 204, 255));
        updateButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        updateButton.setText("Update");
        updateButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateButtonActionPerformed(evt);
            }
        });

        ClientComboBox.setEditable(true);
        ClientComboBox.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        ClientComboBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ClientComboBoxActionPerformed(evt);
            }
        });
        ClientComboBox.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                ClientComboBoxKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                ClientComboBoxKeyReleased(evt);
            }
        });

        searchButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        searchButton.setText("Search");
        searchButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                searchButtonActionPerformed(evt);
            }
        });

        deleteButton.setBackground(new java.awt.Color(153, 204, 255));
        deleteButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        deleteButton.setText("Delete");
        deleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteButtonActionPerformed(evt);
            }
        });

        printButton.setBackground(new java.awt.Color(153, 204, 255));
        printButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        printButton.setText("Print");
        printButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                printButtonActionPerformed(evt);
            }
        });

        refereshButton.setBackground(new java.awt.Color(153, 204, 255));
        refereshButton.setFont(new java.awt.Font("Tahoma", 0, 12)); // NOI18N
        refereshButton.setText("Refresh");
        refereshButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refereshButtonActionPerformed(evt);
            }
        });

        nameLabel.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        nameLabel.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        nameLabel.setText("Policy Type/NIC");

        viewAllButton.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        viewAllButton.setText("View All Policies");
        viewAllButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                viewAllButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(nameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 227, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ClientComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 199, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(searchButton, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1)
                        .addGap(31, 31, 31))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 130, Short.MAX_VALUE)
                        .addComponent(refereshButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(viewAllButton, javax.swing.GroupLayout.PREFERRED_SIZE, 177, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(deleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(updateButton, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(79, 79, 79))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ClientComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(searchButton)
                    .addComponent(nameLabel))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(deleteButton)
                    .addComponent(viewAllButton)
                    .addComponent(printButton, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(refereshButton)
                    .addComponent(updateButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104))
        );

        viewTabbedPane.addTab("View Policy Details", jPanel1);

        jLabel4.setText("NIC");

        medicalRadioButton.setText("MEDICAL");
        medicalRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                medicalRadioButtonActionPerformed(evt);
            }
        });

        jLabel3.setText("Policy ID");

        lifeRadioButton.setText("LIFE");
        lifeRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lifeRadioButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Amount");

        vehicleRadioButton.setText("VEHICLE");
        vehicleRadioButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vehicleRadioButtonActionPerformed(evt);
            }
        });

        jLabel2.setText("Policy Type");

        jLabel5.setText("Date");

        nic1TextField.setEditable(false);

        jButton1.setText("Update");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Cancle");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(lifeRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(vehicleRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(medicalRadioButton, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(amountTextField))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(dateTextField))
                                .addGroup(jPanel2Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(policyIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(nic1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, 204, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(348, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(nic1TextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lifeRadioButton)
                    .addComponent(vehicleRadioButton)
                    .addComponent(medicalRadioButton))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(policyIdTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(dateTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(amountTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addContainerGap(156, Short.MAX_VALUE))
        );

        viewTabbedPane.addTab("Update Policy Details", jPanel2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(194, 194, 194)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 390, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(viewTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 831, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, Short.MAX_VALUE)
                .addComponent(viewTabbedPane, javax.swing.GroupLayout.PREFERRED_SIZE, 476, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void updateButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateButtonActionPerformed
        int rowcount = clientTable.getSelectedRowCount();
        if (rowcount == 1) {
            try {
                int row = clientTable.getSelectedRow();
                updateClient = (String) clientTable.getValueAt(row, 0);
//            new PolicyUpdateForm(null,true).setVisible(true);
//            this.dispose();
                viewTabbedPane.setSelectedIndex(1);
                updateClientForm();
                //jTabbedPane.setSelectedIndex(0);
            } catch (ClassNotFoundException | SQLException ex) {
                Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
            }
        } else if (rowcount == 0) {
            JOptionPane.showMessageDialog(this, "Please select a Client First");
        } else {
            JOptionPane.showMessageDialog(this, "Please select only one Client");

        }
    }//GEN-LAST:event_updateButtonActionPerformed

    private void ClientComboBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ClientComboBoxActionPerformed

    }//GEN-LAST:event_ClientComboBoxActionPerformed

    private void ClientComboBoxKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientComboBoxKeyPressed

    }//GEN-LAST:event_ClientComboBoxKeyPressed

    private void ClientComboBoxKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_ClientComboBoxKeyReleased

    }//GEN-LAST:event_ClientComboBoxKeyReleased

    private void searchButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_searchButtonActionPerformed
        String clientName = (String) ClientComboBox.getSelectedItem();
        //        String pid=(String) pidCombo.getSelectedItem();
        //         String paname=(String)pidCombo.getSelectedItem();
        String CID = (String) ClientComboBox.getSelectedItem();
        DefaultTableModel tableModel = (DefaultTableModel) clientTable.getModel();
        Policy[] detailArray;
        if (clientName.matches("^[Cc][0-9]*$")) {
            try {
                detailArray = PolicyController.getCIDDetails(clientName);
                tableModel.setRowCount(0);
                for (Policy policyDetail : detailArray) {
                    Object rows[] = 
                        {policyDetail.getNic(),policyDetail.getPolicyId(), policyDetail.getPolicyType(), policyDetail.getAmount(),policyDetail.getStartDate()};
                    tableModel.addRow(rows);

                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);

            }

        } else {
            try {
                detailArray = PolicyController.getNameDetails(clientName);
                tableModel.setRowCount(0);
                for (Policy policyDetail : detailArray) {
                    // Object rows[] = {client.getClientId(),client.getClientRegdDate(), client.getNameWithInisials(), client.getSirName(), client.getClientAddress(), client.getLane(), client.getMobileNo(), client.getLandNo(), client.getNic(), client.getDob(), client.getReligion(), client.getGender()};
                    Object rows[] = {policyDetail.getNic(),policyDetail.getPolicyId(), policyDetail.getPolicyType(), policyDetail.getAmount(),policyDetail.getStartDate()};
                    tableModel.addRow(rows);
                }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_searchButtonActionPerformed

    private void deleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteButtonActionPerformed
//        int count = clientTable.getSelectedRowCount();
//        if (count == 1) {
//            int row = clientTable.getSelectedRow();
//            String deleteCID = (String) clientTable.getValueAt(row, 0);
//            try {
//                int res = ClientController.deleteClient(deleteCID);
//                if (res > 0) {
//                    JOptionPane.showMessageDialog(this, "Deleted");
//                    ManageClient.refereshTable();
//                    ManageClient.fillClientomboBox();
//                } else {
//                    JOptionPane.showMessageDialog(this, "Deleted Failed" + deleteCID);
//                }
//            } catch (SQLException ex) {
//                Logger.getLogger(ManageClient.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (ClassNotFoundException ex) {
//                Logger.getLogger(ManageClient.class.getName()).log(Level.SEVERE, null, ex);
//            }
//        } else if (count == 0) {
//            JOptionPane.showMessageDialog(this, "Please select a Client First");
//        } else {
//            JOptionPane.showMessageDialog(this, "Please select only one Client");
//        }
    }//GEN-LAST:event_deleteButtonActionPerformed

    private void printButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_printButtonActionPerformed
        //try {
            //            JasperReport jr = JasperCompileManager.compileReport("./src/view/report/report_9.jrxml");
            //            Map<String, Object> parms = new HashMap<String, Object>();
            //            //params=new HashMap<>();
            //            JRTableModelDataSource ds = new JRTableModelDataSource(clientTable.getModel());
            //            JasperPrint fillReport = JasperFillManager.fillReport(jr, parms, ds);
            //
            //            JasperViewer.viewReport(fillReport, false);
            //        } catch (JRException ex) {
            //            Logger.getLogger(LoanManage.class.getName()).log(Level.SEVERE, null, ex);
            //        }
    }//GEN-LAST:event_printButtonActionPerformed

    private void refereshButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refereshButtonActionPerformed
//        DefaultTableModel tableModel = (DefaultTableModel) clientTable.getModel();
//
//        try {
//            ArrayList<Policy> clientList = PolicyController.getAllPolicys();
//            fillClientomboBox();
//            tableModel.setRowCount(0);
//            for (Client client : clientList) {
//                Object rows[] = {client.getClientId(),client.getClientRegdDate(), client.getNameWithInisials(), client.getSirName(), client.getClientAddress(), client.getLane(), client.getMobileNo(), client.getLandNo(), client.getNic(), client.getDob(), client.getReligion(), client.getGender()};
//                tableModel.addRow(rows);
//            }
//        } catch (ClassNotFoundException ex) {
//            Logger.getLogger(ManageClient.class.getName()).log(Level.SEVERE, null, ex);
//        } catch (SQLException ex) {
//            Logger.getLogger(ManageClient.class.getName()).log(Level.SEVERE, null, ex);
//        }
        //        Patient[] patientComboList=null;
        //        try {
            //            patientComboList = PatientController.getAllPatients();
            //        } catch (ClassNotFoundException ex) {
            //            Logger.getLogger(ViewAllPatient.class.getName()).log(Level.SEVERE, null, ex);
            //        } catch (SQLException ex) {
            //            Logger.getLogger(ViewAllPatient.class.getName()).log(Level.SEVERE, null, ex);
            //        }
    }//GEN-LAST:event_refereshButtonActionPerformed

    private void viewAllButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_viewAllButtonActionPerformed
        try {
            DefaultTableModel tableModel = (DefaultTableModel) clientTable.getModel();

            Policy[] array = PolicyController.showPolicy();
            tableModel.setRowCount(0);
            for (Policy policyDetail : array) {
                Object row[] = {policyDetail.getNic(),policyDetail.getPolicyId(), policyDetail.getPolicyType(), policyDetail.getAmount(),policyDetail.getStartDate()};
                tableModel.addRow(row);
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(ViewAllPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_viewAllButtonActionPerformed

    private void medicalRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_medicalRadioButtonActionPerformed
//        try {
//            policyIdTextField.setText(generateMedicalPolicyId());
//        } catch (SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_medicalRadioButtonActionPerformed

    private void lifeRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lifeRadioButtonActionPerformed
//        try {
//            policyIdTextField.setText(generateLifePolicyId());
//        } catch (SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_lifeRadioButtonActionPerformed

    private void vehicleRadioButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vehicleRadioButtonActionPerformed
//        try {
//            policyIdTextField.setText(generateVehiclePolicyId());
//        } catch (SQLException | ClassNotFoundException ex) {
//            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
//        }
    }//GEN-LAST:event_vehicleRadioButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        try {
            Policy policy = new Policy(nic1TextField.getText(),policyIdTextField.getText(),findId(),Double.parseDouble(amountTextField.getText()),dateTextField.getText());

            int res = PolicyController.updatePolicy(policy);
            if (res > 0) {
                JOptionPane.showMessageDialog(rootPane, "Added");
                policyIdTextField.setText("");
                dateTextField.setText("");
                amountTextField.setText("");
            }else{
                JOptionPane.showMessageDialog(rootPane, "Failed");
            }
        } catch (SQLException | ClassNotFoundException ex) {
            Logger.getLogger(AddPolicy.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private static javax.swing.JComboBox ClientComboBox;
    private javax.swing.JTextField amountTextField;
    private javax.swing.JTable clientTable;
    private javax.swing.JTextField dateTextField;
    private javax.swing.JButton deleteButton;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JRadioButton lifeRadioButton;
    private javax.swing.JRadioButton medicalRadioButton;
    private javax.swing.JLabel nameLabel;
    public static javax.swing.JTextField nic1TextField;
    private javax.swing.JTextField policyIdTextField;
    private javax.swing.JButton printButton;
    private javax.swing.JButton refereshButton;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton updateButton;
    private javax.swing.JRadioButton vehicleRadioButton;
    private javax.swing.JButton viewAllButton;
    private javax.swing.JTabbedPane viewTabbedPane;
    // End of variables declaration//GEN-END:variables



    public void updateClientForm() throws ClassNotFoundException, SQLException{
        Policy[] policyArray=null;
        policyArray=PolicyController.getCIDDetails(ViewAllPolicy.updateClient);
        for(Policy policy:policyArray){
            nic1TextField.setText(policy.getNic());
            policyIdTextField.setText(policy.getPolicyId());
            dateTextField.setText(policy.getStartDate());
            amountTextField.setText(Double.toString(policy.getAmount()));
            
//           
//            maleRadioButton.setSelected(Boolean.getBoolean(client.getGender()));
            
        }
//setText(Double.toString(transaction.getAmount()));

}
    
    
     private String findId() {
        if (lifeRadioButton.isSelected()) {
            return "Life";
        } else if (vehicleRadioButton.isSelected()) {
            return "Vehicle";
        } else if (lifeRadioButton.isSelected()) {
            return "Medical";

        }
        return null;
    }
    

}
